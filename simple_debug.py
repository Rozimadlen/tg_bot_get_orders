#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
"""

import os
import sqlite3
from datetime import datetime

def main():
    print("üöÄ –ü–†–û–°–¢–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ë–î")
    print("=" * 50)
    
    # 1. –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É data –µ—Å–ª–∏ –Ω–µ—Ç
    os.makedirs('data', exist_ok=True)
    print("‚úÖ –ü–∞–ø–∫–∞ data —Å–æ–∑–¥–∞–Ω–∞/–ø—Ä–æ–≤–µ—Ä–µ–Ω–∞")
    
    # 2. –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –ë–î —Å —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
    new_db_path = 'data/shared_bot.sqlite'
    print(f"üîß –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –ë–î: {new_db_path}")
    
    conn = sqlite3.connect(new_db_path)
    cursor = conn.cursor()
    
    # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS leads (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            chat_source TEXT NOT NULL,
            chat_title TEXT,
            sender_id INTEGER,
            sender_name TEXT,
            message_text TEXT NOT NULL,
            quality_score INTEGER,
            quality_label TEXT,
            quality_reasons TEXT,
            timestamp DATETIME DEFAULT CURRENT_TIMESTAMP,
            responded BOOLEAN DEFAULT FALSE,
            response_text TEXT
        )
    ''')
    
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS keywords (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            phrase TEXT UNIQUE NOT NULL,
            active BOOLEAN DEFAULT TRUE,
            hits_count INTEGER DEFAULT 0
        )
    ''')
    
    print("‚úÖ –¢–∞–±–ª–∏—Ü—ã —Å–æ–∑–¥–∞–Ω—ã")
    
    # 3. –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    print("üß™ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö:")
    
    # –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞
    test_keywords = [
        "–∏—â—É –≤–∏–¥–µ–æ–ø—Ä–æ–¥—é—Å–µ—Ä–∞",
        "–Ω—É–∂–µ–Ω –≤–∏–¥–µ–æ–º–æ–Ω—Ç–∞–∂–µ—Ä",
        "—Ç—Ä–µ–±—É–µ—Ç—Å—è –æ–ø–µ—Ä–∞—Ç–æ—Ä",
        "–∫—Ç–æ –¥–µ–ª–∞–µ—Ç –≤–∏–¥–µ–æ"
    ]
    
    for keyword in test_keywords:
        try:
            cursor.execute('INSERT INTO keywords (phrase) VALUES (?)', (keyword,))
            print(f"  ‚úÖ –ö–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ: {keyword}")
        except sqlite3.IntegrityError:
            print(f"  ‚ö†Ô∏è –£–∂–µ –µ—Å—Ç—å: {keyword}")
    
    # –õ–∏–¥—ã
    test_leads = [
        ("@test_chat", "–¢–µ—Å—Ç–æ–≤—ã–π —á–∞—Ç", 12345, "–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤",
         "–ò—â—É –≤–∏–¥–µ–æ–ø—Ä–æ–¥—é—Å–µ—Ä–∞ –¥–ª—è YouTube –∫–∞–Ω–∞–ª–∞. –ë—é–¥–∂–µ—Ç 200–∫",
         6, "üî• –ì–û–†–Ø–ß–ò–ô –õ–ò–î", '["–£–ø–æ–º–∏–Ω–∞–µ—Ç –±—é–¥–∂–µ—Ç"]'),
        
        ("@creative_group", "Creative Group", 23456, "–ú–∞—Ä–∏—è",
         "–ù—É–∂–µ–Ω –º–æ–Ω—Ç–∞–∂–µ—Ä –¥–ª—è —Ä–µ–∫–ª–∞–º–Ω–æ–≥–æ —Ä–æ–ª–∏–∫–∞ —Å—Ä–æ—á–Ω–æ",
         3, "üü° –•–û–†–û–®–ò–ô –õ–ò–î", '["–°—Ä–æ—á–Ω–∞—è –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç—å"]'),
        
        ("@business_chat", "Business Chat", 34567, "–ê–ª–µ–∫—Å–µ–π",
         "–ö—Ç–æ –∑–∞–Ω–∏–º–∞–µ—Ç—Å—è –≤–∏–¥–µ–æ –¥–ª—è —Å–æ—Ü—Å–µ—Ç–µ–π?",
         1, "üü¢ –û–ë–´–ß–ù–´–ô –õ–ò–î", '[]'),
        
        ("@freelance_hub", "Freelance Hub", 45678, "–ê–Ω–Ω–∞",
         "–ò—â—É –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ –≤–∏–¥–µ–æ–≥—Ä–∞—Ñ–∞ –¥–ª—è –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–æ–≥–æ —Ñ–∏–ª—å–º–∞",
         5, "üî• –ì–û–†–Ø–ß–ò–ô –õ–ò–î", '["–ò—â–µ—Ç –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–∞", "–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π –∑–∞–∫–∞–∑"]'),
        
        ("@video_chat", "Video Chat", 56789, "–î–º–∏—Ç—Ä–∏–π",
         "–¢—Ä–µ–±—É–µ—Ç—Å—è –æ–ø–µ—Ä–∞—Ç–æ—Ä –Ω–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ",
         4, "üü° –•–û–†–û–®–ò–ô –õ–ò–î", '["–ö–æ–Ω–∫—Ä–µ—Ç–Ω–∞—è –∑–∞–¥–∞—á–∞"]')
    ]
    
    for lead_data in test_leads:
        cursor.execute('''
            INSERT INTO leads (chat_source, chat_title, sender_id, sender_name, 
                             message_text, quality_score, quality_label, quality_reasons)
            VALUES (?, ?, ?, ?, ?, ?, ?, ?)
        ''', lead_data)
        print(f"  ‚úÖ –õ–∏–¥: {lead_data[3]} - {lead_data[6]}")
    
    conn.commit()
    
    # 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –¥–∞–Ω–Ω—ã–µ –¥–æ–±–∞–≤–∏–ª–∏—Å—å
    cursor.execute("SELECT COUNT(*) FROM leads")
    leads_count = cursor.fetchone()[0]
    print(f"üìã –õ–∏–¥–æ–≤ –≤ –ë–î: {leads_count}")
    
    cursor.execute("SELECT COUNT(*) FROM keywords")
    keywords_count = cursor.fetchone()[0]
    print(f"üîë –ö–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤: {keywords_count}")
    
    conn.close()
    
    print("üéâ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —Å–æ–∑–¥–∞–Ω—ã!")

if __name__ == "__main__":
    main()
