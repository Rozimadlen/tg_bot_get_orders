#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ —Å–∏—Å—Ç–µ–º—ã
"""

import os
import subprocess
import time
import signal
import sys

def kill_all_processes():
    """–£–±–∏–≤–∞–µ—Ç –≤—Å–µ —Å–≤—è–∑–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã"""
    print("üî´ –£–±–∏–≤–∞—é –≤—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã...")
    
    commands = [
        # –£–±–∏–≤–∞–µ–º Python –ø—Ä–æ—Ü–µ—Å—Å—ã
        "pkill -f 'python.*app.py'",
        "pkill -f 'python.*main.py'",
        "pkill -f 'python.*web_server.py'",
        
        # –û—Å–≤–æ–±–æ–∂–¥–∞–µ–º –ø–æ—Ä—Ç 8080
        "lsof -ti:8080 | xargs kill -9 2>/dev/null || true",
        
        # –£–±–∏–≤–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å—ã –ø–æ –∏–º–µ–Ω–∏
        "pkill -f 'telegram'",
        "pkill -f 'bot'",
    ]
    
    for cmd in commands:
        try:
            subprocess.run(cmd, shell=True, check=False)
        except:
            pass
    
    print("‚è≥ –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–æ–≤...")
    time.sleep(3)

def cleanup_database():
    """–û—á–∏—â–∞–µ—Ç –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –ë–î"""
    print("üóëÔ∏è –û—á–∏—Å—Ç–∫–∞ –±–ª–æ–∫–∏—Ä–æ–≤–æ–∫ –ë–î...")
    
    # –§–∞–π–ª—ã –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ SQLite
    lock_files = [
        'data/shared_bot.sqlite-wal',
        'data/shared_bot.sqlite-shm',
        'shared_bot_data.sqlite-wal',
        'shared_bot_data.sqlite-shm',
        'bot_data.sqlite-wal',
        'bot_data.sqlite-shm'
    ]
    
    for lock_file in lock_files:
        try:
            if os.path.exists(lock_file):
                os.remove(lock_file)
                print(f"  ‚úÖ –£–¥–∞–ª–µ–Ω: {lock_file}")
        except Exception as e:
            print(f"  ‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å {lock_file}: {e}")

def create_folders():
    """–°–æ–∑–¥–∞–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–∞–ø–∫–∏"""
    print("üìÅ –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞–ø–æ–∫...")
    
    folders = [
        'data',
        'data/exports',
        'data/logs',
        'templates',
        'sessions'
    ]
    
    for folder in folders:
        os.makedirs(folder, exist_ok=True)
        print(f"  ‚úÖ {folder}")

def check_dashboard_html():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç dashboard.html"""
    print("üìÑ –ü—Ä–æ–≤–µ—Ä–∫–∞ dashboard.html...")
    
    if os.path.exists('dashboard.html') and not os.path.exists('templates/dashboard.html'):
        import shutil
        shutil.move('dashboard.html', 'templates/dashboard.html')
        print("  ‚úÖ dashboard.html –ø–µ—Ä–µ–º–µ—â–µ–Ω –≤ templates/")
    elif os.path.exists('templates/dashboard.html'):
        print("  ‚úÖ templates/dashboard.html —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
    else:
        print("  ‚ùå dashboard.html –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return False
    
    return True

def restart_system():
    """–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ—Ç —Å–∏—Å—Ç–µ–º—É"""
    print("üöÄ –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–´–ô –ü–ï–†–ï–ó–ê–ü–£–°–ö –°–ò–°–¢–ï–ú–´")
    print("=" * 50)
    
    # –®–∞–≥ 1: –£–±–∏–≤–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å—ã
    kill_all_processes()
    
    # –®–∞–≥ 2: –û—á–∏—â–∞–µ–º –ë–î
    cleanup_database()
    
    # –®–∞–≥ 3: –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫–∏
    create_folders()
    
    # –®–∞–≥ 4: –ü—Ä–æ–≤–µ—Ä—è–µ–º dashboard.html
    if not check_dashboard_html():
        print("‚ùå –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –±–µ–∑ dashboard.html")
        return False
    
    # –®–∞–≥ 5: –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    print("üß™ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö...")
    try:
        result = subprocess.run([sys.executable, 'simple_debug.py'],
                              timeout=30, capture_output=True, text=True)
        if result.returncode == 0:
            print("  ‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —Å–æ–∑–¥–∞–Ω—ã")
        else:
            print(f"  ‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö: {result.stderr}")
    except Exception as e:
        print(f"  ‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ: {e}")
    
    # –®–∞–≥ 6: –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∏—Å—Ç–µ–º—É
    print("\nüöÄ –ó–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã...")
    try:
        subprocess.run([sys.executable, 'main.py', '--mode', 'combined'])
    except KeyboardInterrupt:
        print("\nüõë –°–∏—Å—Ç–µ–º–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞: {e}")
    
    return True

if __name__ == "__main__":
    restart_system()
